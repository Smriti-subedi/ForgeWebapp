<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans.xsd"
  default-lazy-init="false" default-autowire="no">

  <bean id="propertyConfigurer" class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer" />
  <!--bean id="debugging" class="de.micromata.printing.common.DebuggingWebAttribute" / -->
  <!-- Sample database -->
  <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiName" value="java:comp/env/jdbc/ProjectForgeDS" />
  </bean>
  <bean id="configXml" class="org.projectforge.core.ConfigXml" scope="singleton">
    <constructor-arg>
      <value>${base.dir}</value>
    </constructor-arg>
  </bean>
  <!-- hibernate Session to DB -->
  <bean id="sessionFactory" class="org.projectforge.database.PersistenceConfig">
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
        <prop key="hibernate.query.substitutions"></prop><!-- Need to force empty despite Hibernate reference saying this is the default -->
        <prop key="hibernate.cache.region_prefix"></prop><!-- Need to force empty. Hibernate reference says this is the default -->
        <prop key="hibernate.show_sql">false</prop>
        <prop key="hibernate.format_sql">false</prop>
        <prop key="hibernate.use_outer_join">true</prop>
        <prop key="hibernate.max_fetch_depth">3</prop>
        <prop key="hibernate.generate_statistics">true</prop>
        <prop key="hibernate.default_batch_fetch_size">16</prop>
        <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
        <prop key="hibernate.cache.use_query_cache">true</prop>
        <prop key="hibernate.cache.use_second_level_cache">true</prop>
        <prop key="hibernate.cache.provider_class">org.hibernate.cache.ehcache.SingletonEhCacheProvider</prop>
        <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
        <prop key="hibernate.connection.driver_class">org.postgresql.Driver</prop> <!-- Overwritten by context.xml. -->
        <prop key="hibernate.jdbc.batch_size">50</prop>
        <prop key="hibernate.jdbc.fetch_size">200</prop>
        <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
        <prop key="hibernate.search.default.indexBase">${base.dir}/hibernate-search</prop>
        <prop key="hibernate.search.worker.batch_size">1000</prop>
        <prop key="hibernate.search.default.optimizer.operation_limit.max">1000</prop>
        <prop key="hibernate.search.default.optimizer.transaction_limit.max">100</prop>
        <prop key="hibernate.search.worker.execution">sync</prop>
        <prop key="hibernate.search.worker.buffer_queue.max">10</prop>
      </props>
    </property>
    <property name="dataSource">
      <ref bean="dataSource" />
    </property>
    <!-- never run a schema update on the database -->
    <property name="schemaUpdate">
      <value>${hibernate.schemaUpdate}</value>
    </property>
    <property name="configXml">
      <ref bean="configXml" />
    </property>
    <property name="entityInterceptor">
      <ref bean="hibernateHistoryInterceptor" />
    </property>
    <!-- <property name="eventListeners"> -->
    <!-- <map> -->
    <!-- <entry key="post-update" value-ref="luceneListener" /> -->
    <!-- <entry key="post-insert" value-ref="luceneListener" /> -->
    <!-- <entry key="post-delete" value-ref="luceneListener" /> -->
    <!-- </map> -->
    <!-- </property> -->
  </bean>

  <!-- <bean id="luceneListener" class="org.hibernate.search.event.FullTextIndexEventListener" /> -->
</beans>
