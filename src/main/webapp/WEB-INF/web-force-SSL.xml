<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_1.xsd">
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
    classpath*:applicationContext*.xml
    classpath*:/**/*Context.xml
    </param-value>
  </context-param>
  <!-- filter> <filter-name>WicketSessionFilter</filter-name> <filter-class>org.apache.wicket.protocol.http.servlet.WicketSessionFilter</filter-class> 
    <init-param> <param-name>filterName</param-name> <param-value>wicket.app</param-value> </init-param> </filter -->
  <filter>
    <filter-name>WicketApplicationFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <init-param>
      <param-name>targetBeanName</param-name>
      <param-value>wicketApplicationFilter</param-value>
    </init-param>
  </filter>

  <filter>
    <filter-name>UserFilter</filter-name>
    <filter-class>org.projectforge.web.UserFilter</filter-class>
  </filter>

  <filter>
    <filter-name>RestUserFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>

  <filter>
    <filter-name>HibernateFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
    <init-param>
      <param-name>sessionFactoryBeanName</param-name>
      <param-value>sessionFactory</param-value>
    </init-param>
    <init-param>
      <param-name>singleSession</param-name>
      <param-value>false</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>springContext</filter-name>
    <filter-class>org.projectforge.web.filter.SpringThreadLocalFilter</filter-class>
  </filter>

  <filter>
    <filter-name>wicket.app</filter-name>
    <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
    <init-param>
      <param-name>applicationClassName</param-name>
      <param-value>org.projectforge.web.wicket.WicketApplication</param-value>
    </init-param>
  </filter>

  <filter>
    <filter-name>expire</filter-name>
    <filter-class>org.projectforge.web.filter.ResponseHeaderFilter</filter-class>
    <init-param>
      <param-name>Cache-Control</param-name>
      <param-value>public, max-age=7200</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>TutorialFilter</filter-name>
    <filter-class>org.projectforge.web.doc.TutorialFilter</filter-class>
  </filter>

  <!-- invocation of the filters -->
  <filter-mapping>
    <filter-name>UserFilter</filter-name>
    <url-pattern>/secure/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>RestUserFilter</filter-name>
    <url-pattern>/rest/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>UserFilter</filter-name>
    <url-pattern>/wa/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>springContext</filter-name>
    <url-pattern>/secure/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>springContext</filter-name>
    <url-pattern>/wa/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <!-- Must be declared before WicketApplication! -->
    <filter-name>HibernateFilter</filter-name>
    <url-pattern>/wa/*</url-pattern>
  </filter-mapping>
  <!-- filter-mapping> <filter-name>WicketSessionFilter</filter-name> <url-pattern>/*</url-pattern> </filter-mapping -->
  <filter-mapping>
    <filter-name>WicketApplicationFilter</filter-name>
    <url-pattern>/wa/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>wicket.app</filter-name>
    <url-pattern>/wa/*</url-pattern>
  </filter-mapping>
  <!-- For online tutorial with action links. -->
  <filter-mapping>
    <filter-name>TutorialFilter</filter-name>
    <url-pattern>/secure/doc/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>expire</filter-name>
    <url-pattern>*.css</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>expire</filter-name>
    <url-pattern>*.gif</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <!-- Planned. Genome not yet used. -->
    <filter-name>expire</filter-name>
    <url-pattern>*.gspt</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>expire</filter-name>
    <url-pattern>*.jpg</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>expire</filter-name>
    <url-pattern>*.js</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>expire</filter-name>
    <url-pattern>*.png</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>expire</filter-name>
    <url-pattern>*.swf</url-pattern>
  </filter-mapping>
  <!-- Startupcode -->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <!-- Does nothing in production mode. -->
  <listener>
    <listener-class>org.projectforge.web.debug.SessionSerializableChecker</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <servlet>
    <!-- Displays logo at the top of the navigation menu. -->
    <servlet-name>LogoServlet</servlet-name>
    <servlet-class>org.projectforge.web.core.LogoServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- Mobile enterprise blogging serlet. -->
    <servlet-name>SMSReceiver</servlet-name>
    <servlet-class>org.projectforge.web.meb.SMSReceiverServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- For backward compability for old e-mails containing links with orders to edit. -->
    <servlet-name>AuftragEditLegacyServlet</servlet-name>
    <servlet-class>org.projectforge.web.legacy.AuftragEditLegacyServlet</servlet-class>
  </servlet>

  <!-- Retos ImageCropper -->
  <servlet>
    <servlet-name>UploadImageFileTemporary</servlet-name>
    <servlet-class>org.projectforge.web.imagecropper.UploadImageFileTemporary</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>UploadImageFile</servlet-name>
    <servlet-class>org.projectforge.web.imagecropper.UploadImageFile</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>DownloadImageFile</servlet-name>
    <servlet-class>org.projectforge.web.imagecropper.DownloadImageFile</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>UpAndDownloadImageFileAsByteArray</servlet-name>
    <servlet-class>org.projectforge.web.imagecropper.UpAndDownloadImageFileAsByteArray</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>CalendarFeed</servlet-name>
    <servlet-class>org.projectforge.web.calendar.CalendarFeed</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>PhoneLookUpServlet</servlet-name>
    <servlet-class>org.projectforge.web.address.PhoneLookUpServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>org.projectforge.web.rest.RestApplication</servlet-name>
    <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
    <init-param>
      <param-name>javax.ws.rs.Application</param-name>
      <param-value>org.projectforge.web.rest.RestApplication</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>org.projectforge.web.rest.RestApplication</servlet-name>
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>LogoServlet</servlet-name>
    <url-pattern>/secure/Logo.png</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>LogoServlet</servlet-name>
    <url-pattern>/secure/Logo.jpg</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>LogoServlet</servlet-name>
    <url-pattern>/secure/Logo.gif</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>SMSReceiver</servlet-name>
    <url-pattern>/secure/SMSReceiver</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AuftragEditLegacyServlet</servlet-name>
    <url-pattern>/secure/fibu/AuftragEdit.action</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>UploadImageFileTemporary</servlet-name>
    <url-pattern>/secure/UploadImageFileTemporary</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>UploadImageFile</servlet-name>
    <url-pattern>/secure/UploadImageFile</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>DownloadImageFile</servlet-name>
    <url-pattern>/secure/DownloadImageFile</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>UpAndDownloadImageFileAsByteArray</servlet-name>
    <url-pattern>/secure/UpAndDownloadImageFileAsByteArray</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>CalendarFeed</servlet-name>
    <url-pattern>/export/ProjectForge.ics</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>PhoneLookUpServlet</servlet-name>
    <url-pattern>/phoneLookup</url-pattern>
  </servlet-mapping>

  <session-config>
    <!-- Session timeout after X MINUTES after no user interaction. -->
    <session-timeout>600</session-timeout>
    <cookie-config>
      <!-- XSS attack: make sure that cookie cannot be accessed via client side scripts -->
      <http-only>true</http-only>
      <!-- CSRF attack, session hijack attack: require cookie can only be used for SSL communication. <secure>true</secure> -->
    </cookie-config>
  </session-config>
  <!--This section defines what file to open first if none is specified -->
  <welcome-file-list>
    <!-- Does not work: -->
    <welcome-file>wa/login</welcome-file>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>
  <!-- error-page> <error-code>404</error-code> <location>/error.jsp</location> </error-page> <error-page> <error-code>500</error-code> <location>/error.jsp</location> 
    </error-page -->
  <error-page>
    <exception-type>java.lang.Throwable</exception-type>
    <location>/wa/error</location>
  </error-page>
  <!-- Uncomment the folloging security constraints to ensure, that login and pages under /secure and /wa are accessed via https -->
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Applikation</web-resource-name>
      <url-pattern>/secure/*</url-pattern>
    </web-resource-collection>
    <user-data-constraint>
      <transport-guarantee>CONFIDENTIAL</transport-guarantee>
    </user-data-constraint>
  </security-constraint>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>wicket.app</web-resource-name>
      <url-pattern>/wa/*</url-pattern>
    </web-resource-collection>
    <user-data-constraint>
      <transport-guarantee>CONFIDENTIAL</transport-guarantee>
    </user-data-constraint>
  </security-constraint>
  <resource-ref>
    <description>Resourcename of the database to use</description>
    <res-ref-name>jdbc/ProjectForgeDS</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
</web-app>
